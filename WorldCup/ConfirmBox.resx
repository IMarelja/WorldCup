<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbWarning.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>